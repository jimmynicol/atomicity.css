// Grid mixins
@mixin make-grid($columns:12) {
  $list: '';

  @for $i from 1 through $columns {
    $item: ".#{$prefix}grid-#{$i}of#{$columns}";
    $list: "#{$item}, #{$list}";
    #{$item} {
      width: percentage($i/$columns);
      min-height: 1px;
    }
    .#{$prefix}grid-row > #{$item} {
      float: left
    }
    .#{$prefix}grid-row.spaced-small > #{$item} {
      width: percentage(($i * (100 - ($columns - 1) * 2)/$columns)/100) + ($i - 1) * 2;
      margin-left: 2%;
    }

    .#{$prefix}grid-row.spaced-medium > #{$item} {
      width: percentage(($i * (100 - ($columns - 1) * 4)/$columns)/100) + ($i - 1) * 4;
      margin-left: 4%;
    }

    .#{$prefix}grid-row.spaced-large > #{$item} {
      width: percentage(($i * (100 - ($columns - 1) * 6)/$columns)/100) + ($i - 1) * 6;
      margin-left: 6%;
    }
  }
}

@mixin make-grid-offsets($columns:12) {
  @for $i from 1 through ($columns - 1) {
    .#{$prefix}grid-#{$i}of#{$columns}-offset {
      margin-left: percentage($i/$columns);
    }
  }
}


// Grid elements
@include make-grid($grid-columns);
@include make-grid-offsets($grid-columns);
.#{$prefix}grid-row {
  @include clearfix;

  &[class*='spaced-'] {
    & > *:first-child {
      margin-left: 0;
    }
  }
}


// Spaced Grid, assigns widths to grid items and adds one of 3 spacings
// between elements: 2%, 4%, 6%
@mixin make-spaced-grid-set($columns:12) {
  @for $i from 2 through $columns {
    .#{$prefix}spaced-grid-#{$i}-small > * {
      width: percentage(((100 - (($i - 1) * 2))/$i)/100);
      margin-left: 2%;
    }
    .#{$prefix}spaced-grid-#{$i}-small > *:nth-child(#{$i}n+#{$i + 1}) {
      margin-left: 0;
    }
    .#{$prefix}spaced-grid-#{$i}-medium > * {
      width: percentage(((100 - (($i - 1) * 4))/$i)/100);
      margin-left: 4%;
    }
    .#{$prefix}spaced-grid-#{$i}-medium > *:nth-child(#{$i}n+#{$i + 1}) {
      margin-left: 0;
    }
    .#{$prefix}spaced-grid-#{$i}-large > * {
      width: percentage(((100 - (($i - 1) * 6))/$i)/100);
      margin-left: 6%;
    }
    .#{$prefix}spaced-grid-#{$i}-large > *:nth-child(#{$i}n+#{$i + 1}) {
      margin-left: 0;
    }
  }
}

[class*='#{$prefix}spaced-grid-'] {
  @include clearfix;
  & > * {
    float: left;
    min-height: 1px;
  }
  & > *:first-child {
    margin-left: 0;
  }
}
@include make-spaced-grid-set(12);


// Added ability to stack grids via media queries
@media (max-width: $screen-phone){
  .#{$prefix}grid-row.stacked-phone {
    display: block;

    & > [class*='#{$prefix}grid-'] {
      width: 100%;
      float: none;
    }
  }
}

@media (min-width: ($screen-phone + 1)) and (max-width: $screen-tablet) {
  .#{$prefix}grid-row.stacked-tablet {
    display: block;

    & > [class*='#{$prefix}grid-'] {
      width: 100%;
      float: none;
    }
  }
}
